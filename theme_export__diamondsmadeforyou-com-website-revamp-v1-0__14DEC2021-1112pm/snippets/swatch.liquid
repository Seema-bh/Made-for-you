{% comment %}
Set the extension of your color files below. Use 'png', 'jpeg', 'jpg' or 'gif'.
{% endcomment %}

{% assign file_extension = 'png' %}

{% if swatch == blank %}
<div class="swatch error">
  <p>You must include the snippet swatch.liquid with the name of a product option.</p> 
  <p>Use: <code>{% raw %}{% include 'swatch' with 'name of your product option here' %}{% endraw %}</code></p>
  <p>Example: <code>{% raw %}{% include 'swatch' with 'Color' %}{% endraw %}</code></p>
</div>
{% else %}

{% assign found_option = false %}
{% assign is_color = false %}
{% assign is_metal = false %}
{% assign option_index = 0 %}

{% for option in product.options %}
{% if option == swatch %}
{% assign found_option = true %}
{% assign option_index = forloop.index0 %}
<style>
  label[for="product-select-option-{{ option_index }}"] { display: none; }
  #product-select-option-{{ option_index }} { display: none; }
  #product-select-option-{{ option_index }} + .custom-style-select-box { display: none !important; }
</style>
<!-- <script>$(window).load(function() { $('.selector-wrapper:eq({{ option_index }})').hide(); });</script> -->
{% assign downcased_option = swatch | downcase %}
{% if downcased_option contains 'color' or downcased_option contains 'colour' %}
{% assign is_color = true %}
{% elsif downcased_option contains 'metal' %}
{% assign is_metal = true %}
{% endif %}
{% endif %}
{% endfor %}

{% unless found_option %}
<div class="swatch error">
  <p>You included the snippet swatch.liquid with the name of a product option — <code>'{{ swatch }}'</code> — that does not belong to your product.</p>
  <p>Use <code>{% raw %}{% include 'swatch' with 'name of your product option here' %}{% endraw %}</code></p>
  <p>Example: <code>{% raw %}{% include 'swatch' with 'Color' %}{% endraw %}</code></p>
  <p><strong>This is case-sensitive!</strong> Do not put in <code>'color'</code> if your product option name is <code>'Color'</code>.</p>
</div>
{% else %}
<div class="swatch clearfix {{ swatch | handle }}" data-option-index="{{ option_index }}">
  <div class="header">{{ swatch }}</div>
  {% assign values = '' %}
  {% for variant in product.variants %}
  {% assign value = variant.options[option_index] %}
  {% unless values contains value %}
  {% assign values = values | join: ',' %}
  {% assign values = values | append: ',' | append: value %} 
  {% assign values = values | split: ',' %}
  <div data-color=".{{ value | handle }}" data-value="{{ value | escape }}" class="swatch-element {% if is_color %}color {% elsif is_metal %}metal {% endif %}{{ value | handle }} {% if variant.available %}available{% else %}soldout{% endif %}">
    {% if is_color or is_metal %}
    <div class="tooltip hide">{{ value }}</div>
    {% endif %}
    <input class="hide" id="swatch-{{ option_index }}-{{ value | handle }}" type="radio" name="option-{{ option_index }}" value="{{ value | escape }}"{% if forloop.first %} checked{% endif %} />
    {% if is_color or is_metal %}
    {% if value contains 'Sliver' or value contains 'sliver' or value contains 'white' or value contains 'White' %}
    {% assign colorImage = '14k-white-gold' %}
    {% elsif value contains 'Rose' or value contains 'rose' %}
    {% assign colorImage = '14k-rose-gold' %}
    {% elsif value contains 'Yellow' or value contains 'yellow' %}
    {% assign colorImage = '14k-yellow-gold' %}
    {% else %}
    {% assign colorImage = '14k-white-gold' %}
    {% endif %}
       
    <label data-color=".{{ value | handle }}" for="swatch-{{ option_index }}-{{ value | handle }}" style="background: {{ colorImage | split: ' ' | last | handle }}; background: url({{ colorImage | handle | append: '.' | append: file_extension | asset_url }}); background-repeat: no-repeat; background-size: cover;">
    </label>
    {% else %}
    <label class="swatch_{{ swatch | handle }}" for="swatch-{{ option_index }}-{{ value | handle }}">
      {{ value }}
    </label>
    {% endif %}
  </div>
  {% endunless %}
  
  {% endfor %}
</div>

{% endunless %}

{% endif %}